{"ast":null,"code":"import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Send, Loader } from 'lucide-react';\nconst HotelChatbot = () => {\n  // ... (previous state declarations remain the same)\n\n  const handleSendMessage = async () => {\n    if (currentMessage.trim() === '') return;\n    const newMessage = {\n      text: currentMessage,\n      isUser: true\n    };\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n    setCurrentMessage('');\n    setIsLoading(true);\n    try {\n      const response = await axios.post('/chat', {\n        guest_name: surname,\n        guest_message: currentMessage\n      });\n      setMessages(prevMessages => [...prevMessages, {\n        text: response.data,\n        isUser: false\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      let errorMessage = \"Sorry, I'm having trouble connecting right now. Please try again later.\";\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        errorMessage = `Server error: ${error.response.status}`;\n      } else if (error.request) {\n        // The request was made but no response was received\n        errorMessage = \"No response received from server. Please check your connection.\";\n      }\n      setMessages(prevMessages => [...prevMessages, {\n        text: errorMessage,\n        isUser: false\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // ... (rest of the component remains the same)\n};\n_c = HotelChatbot;\nexport default HotelChatbot;\nvar _c;\n$RefreshReg$(_c, \"HotelChatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Send","Loader","HotelChatbot","handleSendMessage","currentMessage","trim","newMessage","text","isUser","setMessages","prevMessages","setCurrentMessage","setIsLoading","response","post","guest_name","surname","guest_message","data","error","console","errorMessage","status","request","_c","$RefreshReg$"],"sources":["/Users/hugh/Projects/concierge_bot/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Send, Loader } from 'lucide-react';\n\nconst HotelChatbot = () => {\n  // ... (previous state declarations remain the same)\n\n  const handleSendMessage = async () => {\n    if (currentMessage.trim() === '') return;\n\n    const newMessage = { text: currentMessage, isUser: true };\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n    setCurrentMessage('');\n    setIsLoading(true);\n\n    try {\n      const response = await axios.post('/chat', {\n        guest_name: surname,\n        guest_message: currentMessage\n      });\n\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { text: response.data, isUser: false }\n      ]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      let errorMessage = \"Sorry, I'm having trouble connecting right now. Please try again later.\";\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        errorMessage = `Server error: ${error.response.status}`;\n      } else if (error.request) {\n        // The request was made but no response was received\n        errorMessage = \"No response received from server. Please check your connection.\";\n      }\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { text: errorMessage, isUser: false }\n      ]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // ... (rest of the component remains the same)\n\n};\n\nexport default HotelChatbot;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,QAAQ,cAAc;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB;;EAEA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIC,cAAc,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAElC,MAAMC,UAAU,GAAG;MAAEC,IAAI,EAAEH,cAAc;MAAEI,MAAM,EAAE;IAAK,CAAC;IACzDC,WAAW,CAACC,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEJ,UAAU,CAAC,CAAC;IAC1DK,iBAAiB,CAAC,EAAE,CAAC;IACrBC,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,OAAO,EAAE;QACzCC,UAAU,EAAEC,OAAO;QACnBC,aAAa,EAAEb;MACjB,CAAC,CAAC;MAEFK,WAAW,CAACC,YAAY,IAAI,CAC1B,GAAGA,YAAY,EACf;QAAEH,IAAI,EAAEM,QAAQ,CAACK,IAAI;QAAEV,MAAM,EAAE;MAAM,CAAC,CACvC,CAAC;IACJ,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,IAAIE,YAAY,GAAG,yEAAyE;MAC5F,IAAIF,KAAK,CAACN,QAAQ,EAAE;QAClB;QACA;QACAQ,YAAY,GAAG,iBAAiBF,KAAK,CAACN,QAAQ,CAACS,MAAM,EAAE;MACzD,CAAC,MAAM,IAAIH,KAAK,CAACI,OAAO,EAAE;QACxB;QACAF,YAAY,GAAG,iEAAiE;MAClF;MACAZ,WAAW,CAACC,YAAY,IAAI,CAC1B,GAAGA,YAAY,EACf;QAAEH,IAAI,EAAEc,YAAY;QAAEb,MAAM,EAAE;MAAM,CAAC,CACtC,CAAC;IACJ,CAAC,SAAS;MACRI,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;AAEF,CAAC;AAACY,EAAA,GA3CItB,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}